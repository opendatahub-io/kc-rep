name: OKC Replicator for tekton files

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Target GitHub repository (e.g., org/abc-repo)'
        required: true
        type: string
      release_branch:
        description: 'Branch in target repo to merge PR into (e.g., rhoai-2.9)'
        required: true
        type: string
      version:
        description: 'New version identifier (e.g., v2.29.0)'
        required: true
        type: string
      okc_folder:
        description: 'Select folder inside OKC repo containing Tekton files'
        required: true
        type: choice
        options:
          - data-science-pipelines
          - odh-model-controller
          # Add all valid folder names here

jobs:
  create-pr:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout OKC repository
        uses: actions/checkout@v4

      - name: Prepare Tekton files
        run: |
          repo_folder="${{ inputs.okc_folder }}"
          echo "Using OKC folder: $repo_folder"

          if [ ! -d "$repo_folder/.tekton" ]; then
            echo "ERROR: $repo_folder/.tekton does not exist!"
            exit 1
          fi

          mkdir -p extracted/.tekton
          cp -r "$repo_folder/.tekton/"* extracted/.tekton/

          echo "Replacing output-image tag with version: ${{ inputs.version }}"
          find extracted/.tekton/ -type f -name "*.yaml" | while read file; do
            sed -i -E 's|(name:\s*output-image\s*[\r\n]+[ \t]*value:\s*[^:]+:).*|\1'"${{ inputs.version }}"'|' "$file"
          done

      - name: Clone target repository
        run: |
          git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ inputs.repository }}" target-repo
          cd target-repo
          git checkout -b tekton-update-${{ inputs.version }} origin/${{ inputs.release_branch }}

      - name: Copy and commit updated Tekton files
        run: |
          mkdir -p target-repo/.tekton
          cp -r extracted/.tekton/* target-repo/.tekton/

          cd target-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .tekton
          git commit -m "Update Tekton output-image tags to version ${{ inputs.version }}"
          git push origin tekton-update-${{ inputs.version }}

      
